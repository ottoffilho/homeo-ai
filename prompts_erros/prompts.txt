Objetivo Principal:
Modernizar a estrutura do painel administrativo, introduzindo um header dedicado na área de conteúdo para informações do usuário e ações rápidas (incluindo logoff e configurações), e implementar a funcionalidade de Dark Mode para melhorar a experiência visual e acessibilidade. Isso centraliza informações importantes do usuário e oferece personalização visual, tornando a navegação mais agradável e menos cansativa em longos períodos de uso.

Contexto/Problema a ser Resolvido:
Atualmente, informações do usuário e logoff estão no rodapé da sidebar. A ausência de um header fixo na área de conteúdo e a falta de um tema escuro podem tornar a experiência menos profissional e mais cansativa visualmente.

Arquivos Principais Envolvidos:

src/components/layouts/AdminLayout.tsx (para integrar o novo header e lógica de tema)
Novo arquivo: src/components/layouts/AdminHeader.tsx (para o novo header)
src/App.tsx (para envolver com ThemeProvider do next-themes)
tailwind.config.ts (verificar se as classes dark: estão bem configuradas para todos os componentes)
Passos Detalhados da Implementação:

Criar o Componente AdminHeader.tsx:

Estrutura: Deve ser uma barra horizontal no topo da área de conteúdo.
Conteúdo à Esquerda (Opcional): Pode incluir o título da página atual dinamicamente (Breadcrumbs, se desejado futuramente).
Conteúdo à Direita:
Seletor de Tema (Dark Mode):
Utilizar um componente ThemeSwitcher.tsx (a ser criado ou adaptado).
Este componente usará o hook useTheme da biblioteca next-themes.
Botão com ícones de Sol (Sun) e Lua (Moon) da lucide-react para alternar os temas.
Ícone de Notificações (Placeholder): Adicionar um <Button variant="ghost" size="icon"> com o ícone Bell da lucide-react. A funcionalidade de notificação pode ser implementada depois.
Dropdown do Usuário:
Usar <DropdownMenu> de shadcn/ui.
O DropdownMenuTrigger será um <Button variant="ghost"> contendo:
<Avatar> com as iniciais do usuário ou uma imagem.
Nome do usuário (ou email, se o nome não estiver disponível). O email está em user?.email no AdminLayout.tsx.
DropdownMenuContent com os seguintes DropdownMenuItem:
"Meu Perfil" (leva a uma futura página de perfil do usuário /admin/perfil).
"Configurações" (leva a uma futura página de configurações do sistema /admin/configuracoes).
<DropdownMenuSeparator />
"Sair" (executa a função handleLogout já existente no AdminLayout.tsx).
Integrar AdminHeader.tsx no AdminLayout.tsx:

Importar e renderizar o <AdminHeader /> dentro da div que representa a área de conteúdo principal (a div que é flex-1 flex flex-col). Ele deve ficar acima do {children}.
Ajustar o padding ou margem do {children} para acomodar a altura do novo header.
Implementar Lógica do Dark Mode:

Instalar next-themes: Já consta no package.json.
Prover o Tema no App.tsx:
Importar ThemeProvider de next-themes.
Envolver o componente principal (ex: <BrowserRouter>) com <ThemeProvider attribute="class" defaultTheme="system" enableSystem disableTransitionOnChange>.
Criar ThemeSwitcher.tsx:
TypeScript

// src/components/ThemeSwitcher.tsx (exemplo básico)
import { useTheme } from "next-themes";
import { Button } from "@/components/ui/button";
import { Sun, Moon } from "lucide-react";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";

export function ThemeSwitcher() {
  const { setTheme } = useTheme();

  return (
    <DropdownMenu>
      <DropdownMenuTrigger asChild>
        <Button variant="outline" size="icon">
          <Sun className="h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0" />
          <Moon className="absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100" />
          <span className="sr-only">Toggle theme</span>
        </Button>
      </DropdownMenuTrigger>
      <DropdownMenuContent align="end">
        <DropdownMenuItem onClick={() => setTheme("light")}>
          Claro
        </DropdownMenuItem>
        <DropdownMenuItem onClick={() => setTheme("dark")}>
          Escuro
        </DropdownMenuItem>
        <DropdownMenuItem onClick={() => setTheme("system")}>
          Sistema
        </DropdownMenuItem>
      </DropdownMenuContent>
    </DropdownMenu>
  );
}
Verificar Estilos: Assegurar que o tailwind.config.ts (com darkMode: "class") e os componentes shadcn/ui respondam corretamente à alternância de tema.
Remover Informações do Usuário e Logoff do Rodapé da Sidebar:

Uma vez que o header contenha o dropdown de usuário com logoff, essas informações podem ser removidas do rodapé da sidebar no AdminLayout.tsx para evitar redundância e liberar espaço.
Considerações Adicionais:

Passar a função handleLogout e os dados do user do AdminLayout.tsx para o AdminHeader.tsx via props.
A altura do header deve ser fixa para que o conteúdo abaixo não salte ao rolar (se o header for fixo/sticky).
Resultado Esperado:
Um painel administrativo com um header superior limpo e funcional na área de conteúdo, exibindo o seletor de tema, notificações (placeholder) e um menu de usuário com avatar e opções de perfil/logoff.